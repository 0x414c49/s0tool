# Delen en bewerken mag maar laat deze eerste regels staan.
# Bron : https://www.huizebruin.nl
# Bron File : https://github.com/huizebruin/s0tool/tree/main/esphome
# © Huizebruin.nl
substitutions:
  device_description: ${name} gemaakt door huizebruin.nl versie ${vdate} .
  name: s0tool-watermeter

esphome:
  name: ${name}
  platform: ESP8266
  board: d1_mini
  comment: '${device_description}'
  project:
    name: huizebruin.${name}
    version: "${vdate}"
  
dashboard_import:
  package_import_url: github://huizebruin/s0tool/esphome/watermeter.yaml

packages:   
#  remote_package_three: github://huizebruin/s0tool/esphome/basis.yml@main
  remote_package:
    url: https://github.com/huizebruin/s0tool/esphome/components
    ref: main
    files: 
      - basis.yaml
    refresh: 0d  

improv_serial:
  
wifi:
  # ssid: "wifi_ssid"
  # password: "wifi_password"
# ⬇ Hieronder niets veranderen tenzij je het overal goed aanpast ⬇ #
# ⬇ Schakel fallback-hotspot (captive portal) in voor het geval de wifi-verbinding mislukt ⬇ #
  ap:
    ssid: "${name}"

web_server:
  port: 80
  
captive_portal:
# ⬇ Enable logging ⬇ # 
logger:
  level: INFO
  
#  # ⬇ Enable Home Assistant API ⬇ # 
api:
  services:
    - service: meterstand_water
      variables:
        meter_value: int 
      then:
        - globals.set:
            id: totalWaterUsage
            value: !lambda "return ( meter_value ) ;"

globals:
  - id: totalWaterUsage
    type: int 
# ⬇ Bij het updaten onder de waarde, verander dit in no voor 1 run  ⬇ # 
    restore_value: yes      
# ⬇ Bij het flashen,pas dit aan! ⬇ #        
    initial_value: '201' 

ota:
  safe_mode: true
  reboot_timeout: 10min
  num_attempts: 5

#  ⬇ Enable time component voor reset elke nacht ⬇ #
time:
  - platform: homeassistant
    id: time_homeassistant
    on_time_sync:
      - component.update: S0tool_uptime_timestamp

sensor:
#------------------------# Watermeter #------------------------#
# ⬇ watermeter pulsen ⬇ #
  - platform: pulse_counter
    pin: D2
    id: watermeter_pulse
    name: "watermeter pulse"
    state_class: measurement
    accuracy_decimals: 1

# ⬇ Totaal watermeter ⬇ #      
    total:
      id: sensor_pulse_meter_total
      name: "watermeter Totaal"
      icon: "mdi:cube-outline"
      state_class: "total_increasing"
      unit_of_measurement: m3
      accuracy_decimals: 3
      filters:
      - multiply: 0.001
      
# ⬇ Watermeter stand bij benadering ⬇ #
  - platform: template
    id: watermeter_total
    name: "watermeter stand"
    state_class: "total_increasing"
    icon: mdi:water
    unit_of_measurement: m3
    accuracy_decimals: 3
    lambda:       
      return id(sensor_pulse_meter_total).state + id(totalWaterUsage);
      
# ⬇ watermeter l/min ⬇ #
  - platform: template
    name: "Water verbruik Liter"
    id: watermeter_flow
    accuracy_decimals: 1
    unit_of_measurement: "l/min"
    icon: "mdi:water"
    lambda: return (id(watermeter_pulse).state);
