 
#  # ⬇ Enable Home Assistant API ⬇ # 
api:
  services:
    - service: meterstand_water
      variables:
        meter_value: float
      then:
        - globals.set:
            id: totalWaterUsage
            value: !lambda "return ( meter_value ) ;"

globals:
  - id: totalWaterUsage
    type: float
# ⬇ Bij het updaten onder de waarde, verander dit in no voor 1 run  ⬇ # 
    restore_value: yes      
# ⬇ Bij het flashen,pas dit aan! ⬇ #        
    initial_value: '010' 
    
sensor:
#------------------------# Watermeter #------------------------#
# ⬇ watermeter pulsen ⬇ #
  - platform: pulse_counter
    pin: D2
    id: watermeter_pulse
    name: "watermeter pulse"
    state_class: measurement
    accuracy_decimals: 1

# ⬇ Totaal watermeter ⬇ #      
    total:
      id: sensor_pulse_meter_total
      name: "watermeter Totaal"
      icon: "mdi:cube-outline"
      state_class: "total_increasing"
      unit_of_measurement: m3
      accuracy_decimals: 3
      filters:
      - multiply: 0.001
      
# ⬇ Watermeter stand bij benadering ⬇ #
  - platform: template
    id: watermeter_total
    name: "watermeter stand"
    state_class: "total_increasing"
    icon: mdi:water
    unit_of_measurement: m3
    accuracy_decimals: 3
    lambda:       
      return id(sensor_pulse_meter_total).state + id(totalWaterUsage);
      
# ⬇ watermeter l/min ⬇ #
  - platform: template
    name: "Water verbruik Liter"
    id: watermeter_flow
    accuracy_decimals: 1
    unit_of_measurement: "l/min"
    icon: "mdi:water"
    lambda: return (id(watermeter_pulse).state);

  - platform: total_daily_energy
    name: 'waterverbruik vandaag'                 
    id: daily_water_S0tool
    power_id: sensor_pulse_meter_total
    unit_of_measurement: 'm3'
    icon: 'mdi:circle-slice-3'                          
    state_class: total_increasing
    accuracy_decimals: 3
    restore: true